params.nproc = 10 //* @input @description:"How many processes to use for each step. Default 1"
params.projectDir="${projectDir}" //* @input @description:"How many processes to use for each step. Default 1"
params.mate="pair"
params.mate2="single"
//* autofill
// Process Parameters for params.Filter_Sequence_Quality_filter_seq_quality:
params.Filter_Sequence_Quality_filter_seq_quality.method = "quality"
params.Filter_Sequence_Quality_filter_seq_quality.nproc = params.nproc
params.Filter_Sequence_Quality_filter_seq_quality.q = "20"
// Process Parameters for Mask_Primer_1_MaskPrimers:
params.Mask_Primer_1_MaskPrimers.method = ["align","extract"]
params.Mask_Primer_1_MaskPrimers.mode = ["cut","cut"]
params.Mask_Primer_1_MaskPrimers.primer_field = ["C_CALL",""]
params.Mask_Primer_1_MaskPrimers.barcode_field = ["","BARCODE"]
params.Mask_Primer_1_MaskPrimers.start = [0,12]
params.Mask_Primer_1_MaskPrimers.barcode = ["false","true"]
params.Mask_Primer_1_MaskPrimers.umi_length = [0,4]
params.Mask_Primer_1_MaskPrimers.maxerror = [0.3,0.2]
params.Mask_Primer_1_MaskPrimers.maxlen = [100,50]
params.Mask_Primer_1_MaskPrimers.revpr = ["true","false"]
params.Mask_Primer_1_MaskPrimers.failed = "true"
params.Mask_Primer_1_MaskPrimers.nproc = params.nproc
params.Mask_Primer_1_MaskPrimers.R1_primers = "${projectDir}/primers/Human_IG_CRegion_RC.fasta"
params.Mask_Primer_1_MaskPrimers.R2_primers = ""
// Process Parameters for params.Pair_Sequence_pre_consensus_pair_seq:
params.Pair_Sequence_pre_consensus_pair_seq.coord = "illumina"
params.Pair_Sequence_pre_consensus_pair_seq.act = "none"
params.Pair_Sequence_pre_consensus_pair_seq.copy_fields_1 = "BARCODE"
params.Pair_Sequence_pre_consensus_pair_seq.copy_fields_2 = "C_CALL"
params.Pair_Sequence_pre_consensus_pair_seq.nproc = params.nproc
params.Pair_Sequence_pre_consensus_pair_seq.head_seqeunce_file="R2"
params.Align_Sets_align_sets.method = "muscle"
params.Align_Sets_align_sets.bf = "BARCODE"
params.Align_Sets_align_sets.div = "false"
params.Align_Sets_align_sets.failed = "false"
params.Align_Sets_align_sets.nproc = params.nproc
params.Align_Sets_align_sets.muscle_exec = "/usr/local/bin/muscle"
params.Align_Sets_align_sets.offset_table = ""
params.Align_Sets_align_sets.pf = ""
params.Align_Sets_align_sets.mode = ""
params.Align_Sets_align_sets.primer_file = ""
params.Align_Sets_align_sets.reverse = "false"
params.Build_Consensus_build_consensus.failed = "false"
params.Build_Consensus_build_consensus.nproc = params.nproc
params.Build_Consensus_build_consensus.barcode_field = ["BARCODE","BARCODE"]
params.Build_Consensus_build_consensus.primer_field = ["C_CALL","C_CALL"]
params.Build_Consensus_build_consensus.act = ["none","none"]
params.Build_Consensus_build_consensus.mincount = [1,1]
params.Build_Consensus_build_consensus.minqual = [0,0]
params.Build_Consensus_build_consensus.minfreq = [0.6,0.6]
params.Build_Consensus_build_consensus.maxerror = [0.1,0.1]
params.Build_Consensus_build_consensus.prcons = [0.6,0.6]
params.Build_Consensus_build_consensus.maxgap = [0.5,0.5]
params.Build_Consensus_build_consensus.maxdiv = ["none","none"]
params.Build_Consensus_build_consensus.dep = ["false","false"]
// Process Parameters for params.Pair_Sequence_post_consensus_pair_seq:
params.Pair_Sequence_post_consensus_pair_seq.coord = "presto"
params.Pair_Sequence_post_consensus_pair_seq.act = "none"
params.Pair_Sequence_post_consensus_pair_seq.copy_fields_1 = ""
params.Pair_Sequence_post_consensus_pair_seq.copy_fields_2 = ""
params.Pair_Sequence_post_consensus_pair_seq.nproc = params.nproc
params.Pair_Sequence_post_consensus_pair_seq.head_seqeunce_file="R2"
// Process Parameters for params.Assemble_pairs_assemble_pairs:
params.Assemble_pairs_assemble_pairs.method = "align"
params.Assemble_pairs_assemble_pairs.coord = "presto"
params.Assemble_pairs_assemble_pairs.rc = "tail"
params.Assemble_pairs_assemble_pairs.head_fields_R1 = "CONSCOUNT"
params.Assemble_pairs_assemble_pairs.head_fields_R2 = "CONSCOUNT PRCONS"
params.Assemble_pairs_assemble_pairs.failed = "false"
params.Assemble_pairs_assemble_pairs.fasta = "false"
params.Assemble_pairs_assemble_pairs.nproc = params.nproc
params.Assemble_pairs_assemble_pairs.alpha = 0.00001
params.Assemble_pairs_assemble_pairs.maxerror = 0.3
params.Assemble_pairs_assemble_pairs.minlen = 8
params.Assemble_pairs_assemble_pairs.maxlen = 1000
params.Assemble_pairs_assemble_pairs.scanrev = "true"
params.Assemble_pairs_assemble_pairs.minident = 0.5
params.Assemble_pairs_assemble_pairs.evalue = 0.00001
params.Assemble_pairs_assemble_pairs.maxhits = 100
params.Assemble_pairs_assemble_pairs.fill = "false"
params.Assemble_pairs_assemble_pairs.aligner = "blastn"
params.Assemble_pairs_assemble_pairs.gap = 0
params.Assemble_pairs_assemble_pairs.head_seqeunce_file="R2"
params.Assemble_pairs_assemble_pairs.assemble_reference="/usr/local/share/igblast/fasta/imgt_human_ig_v.fasta"
params.Filter_Sequence_Mask.method = "maskqual"
params.Filter_Sequence_Mask.nproc = params.nproc
params.Filter_Sequence_Mask.q = "30"
// Process Parameters for params.Parse_header_collapse_parse_headers:
params.Parse_header_parse_headers.method = "collapse"
params.Parse_header_parse_headers.act = "min"
params.Parse_header_parse_headers.args = "-f CONSCOUNT"
params.Parse_header_rename_parse_headers.method = "rename"
params.Parse_header_rename_parse_headers.act = "none"
params.Parse_header_rename_parse_headers.args = "-f PRCONS -k C_CALL"
// Process Parameters for params.edit_collapse_seq_params:
params.collapse_sequences_collapse_seq.act = "sum"
params.collapse_sequences_collapse_seq.max_missing = 20
params.collapse_sequences_collapse_seq.inner = "true"
params.collapse_sequences_collapse_seq.uf = "C_CALL"
params.collapse_sequences_collapse_seq.cf = "CONSCOUNT"
params.collapse_sequences_collapse_seq.nproc = params.nproc
// Process Parameters for params.Parse_header_parse_headers:
params.split_seq.field = "CONSCOUNT"
params.split_seq.num = 2
params.split_seq.fasta = "true"
